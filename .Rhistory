print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
#print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + floor(365*runif(100))
hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
#print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + mySums
hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
#print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date(myData$date) + mySums
hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + mySums
hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + mySums
hist(rdates, "months", format = "%d")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + mySums
hist(mySums, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + mySums
print(rdates)
hist(rdates, "months", format = "%d %")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + 70*stats::runif(100)
print(rdates)
hist(rdates, "months", format = "%d %")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + floor(365*runif(100))
print(rdates)
hist(rdates, "months", format = "%d %")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + floor(365*runif(100))
print(rdates)
hist(rdates, "months", format = "%d %")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
#hist(mySums, "months", format = "%d %b")
rdates <- as.Date("2010/1/1") + floor(365*runif(100))
print(rdates)
hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
hist(mySums, "months", format = "%d %b")
#rdates <- as.Date("2010/1/1") + floor(365*runif(100))
#print(rdates)
#hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
# Reproducible Research - Assignment 1
# by Cristian Popescu (August 12th, 2014)
#
#
#Loading and preprocessing the data (if necessary)
myData <- read.csv("activity.csv", header=TRUE)
myData$date <- as.Date(myData$date)
print(head(myData))
#What is mean total number of steps taken per day?
#first, we ignore the missing steps
#myFiltereData <- subset(myData,!is.na(myData$steps))
#print(unique(myFiltereData$date))
#Make a histogram of the total number of steps taken each day
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
print(mySums)
hist(mySums)
#rdates <- as.Date("2010/1/1") + floor(365*runif(100))
#print(rdates)
#hist(rdates, "months", format = "%d %b")
#Calculate and report the mean and median total number of steps taken per day
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myData$steps, myData$date, sum, na.rm=T)
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySums, main="histogram of the total number of steps taken each day", xlab="")
```
myData <- read.csv("activity.csv", header=TRUE)
myFilteredData <- myData[complete.cases(myData),]
print(head(myFilteredData))
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
```
Now, remove any NA values:
```{r}
myFilteredData <- myData[complete.cases(myData),]
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myFilteredData$steps, myFilteredData$date, sum, na.rm=T)
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySums, main="histogram of the total number of steps taken each day", xlab="total number of steps per day")
```
Calculate and report the mean and median total number of steps taken per day:
```{r}
mean(mySums)
```
```{r}
median(mySums)
```
###What is the average daily activity pattern?
```{r}
myDailyAverage <- tapply(myFilteredData$steps, myFilteredData$date, mean, na.rm=T)
print(myDailyAverage)
```
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
```
Now, remove any NA values:
```{r}
myFilteredData <- myData[complete.cases(myData),]
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myFilteredData$steps, myFilteredData$date, sum, na.rm=T)
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySums, main="histogram of the total number of steps taken each day", xlab="total number of steps per day")
```
Calculate and report the mean and median total number of steps taken per day:
```{r}
mean(mySums)
```
```{r}
median(mySums)
```
###What is the average daily activity pattern?
```{r}
myDailyAverage <- tapply(myFilteredData$steps, myFilteredData$date, mean, na.rm=T)
print(myDailyAverage)
```
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
```
Now, remove any NA values:
```{r}
myFilteredData <- myData[complete.cases(myData),]
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myFilteredData$steps, myFilteredData$date, sum, na.rm=T)
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySums, main="histogram of the total number of steps taken each day", xlab="total number of steps per day")
```
Calculate and report the mean and median total number of steps taken per day:
```{r}
mean(mySums)
```
```{r}
median(mySums)
```
###What is the average daily activity pattern?
```{r}
myDailyAverage <- tapply(myFilteredData$steps, myFilteredData$date, mean)
print(myDailyAverage)
```
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
```
Now, remove any NA values:
```{r}
myFilteredData <- myData[complete.cases(myData),]
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myFilteredData$steps, myFilteredData$date, sum, na.rm=T)
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySums, main="histogram of the total number of steps taken each day", xlab="total number of steps per day")
```
Calculate and report the mean and median total number of steps taken per day:
```{r}
mean(mySums)
```
```{r}
median(mySums)
```
###What is the average daily activity pattern?
```{r}
myDailyAverage <- tapply(myFilteredData$steps, myFilteredData$date, mean)
myFilteredDailyAverage <- myDailyAverage[complete.cases(myDailyAverage),]
print(myFilteredDailyAverage)
```
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
print(myData)
```
Now, remove any NA values:
```{r}
myFilteredData <- myData[complete.cases(myData),]
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myFilteredData$steps, myFilteredData$date, sum, na.rm=T)
mySumsFiltered <- mySums[complete.cases(mySums)]
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySumsFiltered, main="histogram of the total number of steps taken each day", xlab="total number of steps per day")
```
Calculate and report the mean and median total number of steps taken per day:
```{r}
mean(mySumsFiltered)
```
```{r}
median(mySumsFiltered)
```
###What is the average daily activity pattern?
```{r}
myDailyAverage <- tapply(myFilteredData$steps, myFilteredData$date, mean)
myFilteredDailyAverage <- myDailyAverage[complete.cases(myDailyAverage)]
print(myFilteredDailyAverage)
```
---
title: "RepData_PeerAssessment1"
author: "Cristian Popescu"
date: "Wednesday, August 13, 2014"
output: html_document
---
###Loading and preprocessing the data
First we will start by loading the data from activity.csv file and computer any preprocessing.
```{r}
myData <- read.csv("activity.csv", header=TRUE)
```
Now, remove any NA values:
```{r}
myFilteredData <- myData[complete.cases(myData),]
```
###What is mean total number of steps taken per day?
In order to compute the mean total number of steps taken per day, we will ignore any missing values (e.g. NA):
```{r}
mySums <- tapply(myFilteredData$steps, myFilteredData$date, sum, na.rm=T)
mySumsFiltered <- mySums[complete.cases(mySums)]
```
Next, we will look at the histogram of the data totals previously computed.
```{r, echo=FALSE}
hist(mySumsFiltered, main="histogram of the total number of steps taken each day", xlab="total number of steps per day")
```
Calculate and report the mean and median total number of steps taken per day:
```{r}
mean(mySumsFiltered)
```
```{r}
median(mySumsFiltered)
```
###What is the average daily activity pattern?
Create a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis):
```{r}
myDailyAverage <- tapply(myFilteredData$steps, myFilteredData$interval, mean)
myFilteredDailyAverage <- myDailyAverage[complete.cases(myDailyAverage)]
df<-data.frame(as.numeric(rownames(myFilteredDailyAverage)),myFilteredDailyAverage)
colnames(df)[1]="interval"
colnames(df)[2]="number_of_steps"
myMatrix <- as.data.frame.matrix(df)
myXVector <- myMatrix$interval
myYVector <- myMatrix$number_of_steps
```
And now, create the graph:
```{r}
plot(myXVector,myYVector,xlab="interval", ylab="numer of steps taken", type="l", lty=1, col="black")
```
Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
```{r}
which.max(myMatrix$number_of_steps)
```
myData <- read.csv("activity.csv", header=TRUE)
myFilteredData <- myData[complete.cases(myData),]
print(head(myFilteredData))
myData <- read.csv("activity.csv", header=TRUE)
myFilteredData <- myData[complete.cases(myData),]
print(head(myFilteredData))
